# Ersatz 

Ersatz is a library for generating QSAT (CNF/QBF) problems using a monad to be solved by external solvers.

What differentiates Ersatz is the use of observable sharing in the API.

For instance to define a full adder:


        full_adder :: Bit b -> Bit b -> Bit b -> (Bit b, Bit b)
        full_adder a b cin = (s2, c1 || c2)
            where (s1,c1) = half_adder a b
                  (s2,c2) = half_adder s1 cin

        half_adder :: Bit b -> Bit b -> (Bit b, Bit b)
        half_adder a b = (a `xor` b, a && b)


This enables you to use the a much richer subset of Haskell than the purely monadic meta-language.